<?php
/** 
* generate MO compatible files
* Reads the content of table sys_queries and converts to GETTEXT
* 
* @author  Werner Huysmans <werner.huysmans@skynet.be>
* @changed:   20081201
* @access  public
* @package tools
* @filesource
*/
require("../includes/config_mycmms.inc.php");
set_time_limit(0);
require("setup.php");
#define("MO_FILE","../documents/resources/gettext_queries.php");
#define("MO_FILE2","../documents/resources/gettext_mysql.php");
#define("MO_FILE3","../documents/resources/gettext_DB_fields.php");
#define("MO_FILE4","../document/resources/gettext_smarty.php");

$DB=DBC::get();
$DO_caption_title=true;
$DO_DB_fields=true;
$DO_SMARTY=false;
if ($DO_caption_title) {
    $filename="../documents/resources/resources_captions.php";
    $filelink=MO_FILE;
    $messages1=array();
    $errors1=array();
    if (is_writable($filename)) {
        if (!$handle = fopen($filename, 'w+')) {
            $errors1[]="Cannot open file ($filename)";
            exit;
        }
        $header="<?PHP\n/** Generated by ".$PHP_SELF."\n";
        if (fwrite($handle, $header) == FALSE) {
            $errors1[]="Cannot write to file ($filename)";
            exit;
        }
        fwrite($handle,"* @private \n");
        fwrite($handle,"* @filesource");
        fwrite($handle,"*/\n");
        $messages1[]="Starting creation of $filename ...";
        $sql = "SELECT name,caption,title FROM sys_queries";
        $result=$DB->query($sql);
        foreach ($result->fetchAll(PDO::FETCH_OBJ) as $row) {
            fwrite($handle,"echo \"QUERY-".$row->name."\".gettext(\"".$row->caption."\")".".gettext(\"".$row->title."\");"."\n");
        } 
        $sql = "SELECT DISTINCT CAT FROM sys_navigation";
        $result=$DB->query($sql);
        foreach ($result->fetchAll(PDO::FETCH_OBJ) as $row) {
            fwrite($handle,"echo \"QUERY-".$row->CAT."\".gettext(\"".$row->CAT."\");"."\n");
        } 
        $sql="SELECT tabheader FROM sys_tabwindows";
        $result=$DB->query($sql);
        foreach ($result->fetchAll(PDO::FETCH_OBJ) as $row) {
            fwrite($handle,"echo \"TAB-\".gettext(\"".$row->tabheader."\");"."\n");
        } 
        $sql="SELECT tabheader FROM sys_mainwindow";
        $result=$DB->query($sql);
        foreach ($result->fetchAll(PDO::FETCH_OBJ) as $row) {
            fwrite($handle,"echo \"MAIN-\".gettext(\"".$row->tabheader."\");"."\n");
        } 
        $footer="/* End of Generation */\n?>";
        fwrite($handle,$footer);
        fclose($handle);
        $messages1[]="Creation of caption/title ($filename) is finished!";
    } else {
        $errors1[]="The file $filename is not writable<BR>";
    }
} // EO DO_caption_title
if ($DO_DB_fields) {
    $filename="../documents/resources/resources_DB.php";
    $filelink=MO_FILE3;
    $messages2=array();
    $errors2=array();
    if (is_writable($filename)) {
        if (!$handle = fopen($filename, 'w+')) {
             $errors2[]="Cannot open file ($filename)";
             exit;
        }
        $header="<?PHP\n/** Generated by ".$PHP_SELF."\n";
        if (fwrite($handle, $header) == FALSE) {
            $errors2[]="Cannot write to file ($filename)";
            exit;
        }
        fwrite($handle,"* @private \n");
        fwrite($handle,"*/\n");
        $messages2[]="Starting creation of $filename ...";
        $tables=array(
            "wo","woop","wocraft","wop","woe","wov","wo_assign",
            "invy","spares","stock","invvend",
            "task","taskeq","tskop","tskcraft","tskparts","tskemp",
            "sys_groups","sys_queries",
            "dl","dd",
            "equip");
        foreach($tables as $table) {        
            fwrite($handle,"/* $table */\n");
            $sql="show columns from $table";
            $result=$DB->query($sql);
            foreach($result->fetchAll(PDO::FETCH_OBJ) as $row) {
                fwrite($handle,"echo \"<li>\".gettext(\"DBFLD_".$row->Field."\").gettext(\"LBLFLD_".$row->Field."\").\"</li>\";\n");
            }
        }
        $footer="/* End of Generation */\n?>";
        fwrite($handle,$footer);
        fclose($handle);
        $messages2[]="Creation of DBFLD_ names ($filename) is finished";
    } else {
        $errors2[]="The file $filename is not writable<BR>";
    }
} // EO DO_DBFLD
if ($DO_SMARTY) {
    $filename="../documents/gettext_smarty.php";
    $messages3=array();
    $errors3=array();
    $smarties=array();
    // smarty open tag
    $ldq = preg_quote('{');
    // smarty close tag
    $rdq = preg_quote('}');
    // smarty command
    $cmd = preg_quote('t');
    // extensions of smarty files, used when going through a directory
    $extensions = array('tpl');
    // "fix" string - strip slashes, escape and convert new lines to \n
    function fs($str) {
        $str = stripslashes($str);
        $str = str_replace('"', '\"', $str);
        $str = str_replace("\n", '\n', $str);
        return $str;
    }
    // rips gettext strings from $file and prints them in C format
    function do_file($file) {
        global $handle;
        global $smarties;
        $content = @file_get_contents($file);
        if (empty($content)) {
            return;
        }
        global $ldq, $rdq, $cmd;
        preg_match_all(
                "/{$ldq}\s*({$cmd})\s*([^{$rdq}]*){$rdq}([^{$ldq}]*){$ldq}\/\\1{$rdq}/",
                $content,
                $matches
        );
        for ($i=0; $i < count($matches[0]); $i++) {
            // TODO: add line number
            fwrite($handle,"/* $file */\n"); // credit: Mike van Lammeren 2005-02-14
            if (preg_match('/plural\s*=\s*["\']?\s*(.[^\"\']*)\s*["\']?/', $matches[2][$i], $match)) {
                echo 'ngettext("'.fs($matches[3][$i]).'","'.fs($match[1]).'",x);'."\n";
            } else {
                fwrite($handle,'gettext("'.fs($matches[3][$i]).'");'."\n");
            }

            echo "\n";
        }
        $smarties[]="Analyzed $file";
    }
    // go through a directory
    function do_dir($dir) {
        $d = dir($dir);

        while (false !== ($entry = $d->read())) {
            if ($entry == '.' || $entry == '..') {
                continue;
            }

            $entry = $dir.'/'.$entry;

            if (is_dir($entry)) { // if a directory, go through it
                do_dir($entry);
            } else { // if file, parse only if extension is matched
                $pi = pathinfo($entry);
                
                if (isset($pi['extension']) && in_array($pi['extension'], $GLOBALS['extensions'])) {
                    do_file($entry);
                }
            }
        }

        $d->close();
    }
    if (is_writable($filename)) {
        if (!$handle = fopen($filename, 'w+')) {
             $errors3[]="Cannot open file ($filename)";
             exit;
        }
        $header="<?PHP\n/** Generated by ".$PHP_SELF." **/\n";
        if (fwrite($handle, $header) == FALSE) {
            $errors3[]="Cannot write to file ($filename)";
            exit;
        }
    }
    do_dir("../smarty/templates");
    $messages3[]="Creation of GetText Smarty Source ($filename) is finished!";
} // EO DO_SMARTY

$tpl=new smarty_mycmms();
$tpl->assign("stylesheet",STYLE_PATH."/".CSS_SMARTY);
$tpl->assign("messages1",$messages1);
$tpl->assign("errors1",$errors1);
$tpl->assign("messages2",$messages2);
$tpl->assign("tables",$tables);
$tpl->assign("errors2",$errors2);
$tpl->assign("messages3",$messages3);
$tpl->assign("smarties",$smarties);
$tpl->assign("errors3",$errors3);
$tpl->display_error("action/generate_gettext.tpl");

set_time_limit(30);
?>

